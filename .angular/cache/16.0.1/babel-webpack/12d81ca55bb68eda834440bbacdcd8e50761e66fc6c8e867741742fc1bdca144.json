{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass CartService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n  }\n  addToCart(item) {\n    const currentItems = this.cartItemsSubject.value;\n    this.cartItemsSubject.next([...currentItems, item]);\n  }\n  removeCartItem(item) {\n    const currentItems = this.cartItemsSubject.value.filter(i => i !== item);\n    this.cartItemsSubject.next(currentItems);\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root' // Isso garante que o serviço está disponível em toda a aplicação\n  });\n}\n\nexport { CartService };","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAEtC,MAGaC,WAAW;EAHxBC,YAAA;IAIU,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAQ,EAAE,CAAC;IACzD,KAAAI,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;;EAEjDC,SAASA,CAACC,IAAS;IACjB,MAAMC,YAAY,GAAG,IAAI,CAACL,gBAAgB,CAACM,KAAK;IAChD,IAAI,CAACN,gBAAgB,CAACO,IAAI,CAAC,CAAC,GAAGF,YAAY,EAAED,IAAI,CAAC,CAAC;EACrD;EAEAI,cAAcA,CAACJ,IAAS;IACtB,MAAMC,YAAY,GAAG,IAAI,CAACL,gBAAgB,CAACM,KAAK,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKN,IAAI,CAAC;IACxE,IAAI,CAACJ,gBAAgB,CAACO,IAAI,CAACF,YAAY,CAAC;EAC1C;EAAC,QAAAM,CAAA;qBAZUb,WAAW;EAAA;EAAA,QAAAc,EAAA;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV,MAAM,CAAC;;;;SAERjB,WAAW","names":["BehaviorSubject","CartService","constructor","cartItemsSubject","cartItems$","asObservable","addToCart","item","currentItems","value","next","removeCartItem","filter","i","_","_2","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/home/lucas/Documentos/Web 3/fev16/src/app/services/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root' // Isso garante que o serviço está disponível em toda a aplicação\n})\nexport class CartService {\n  private cartItemsSubject = new BehaviorSubject<any[]>([]);\n  cartItems$ = this.cartItemsSubject.asObservable();\n\n  addToCart(item: any) {\n    const currentItems = this.cartItemsSubject.value;\n    this.cartItemsSubject.next([...currentItems, item]);\n  }\n\n  removeCartItem(item: any) {\n    const currentItems = this.cartItemsSubject.value.filter(i => i !== item);\n    this.cartItemsSubject.next(currentItems);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}