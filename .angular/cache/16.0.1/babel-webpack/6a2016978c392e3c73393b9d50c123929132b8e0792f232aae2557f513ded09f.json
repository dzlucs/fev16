{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/cart.service\";\nfunction CartComponent_app_cart_modal_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"app-cart-modal\", 4);\n    i0.…µ…µlistener(\"close\", function CartComponent_app_cart_modal_5_Template_app_cart_modal_close_0_listener() {\n      i0.…µ…µrestoreView(_r2);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.isModalOpen = false);\n    });\n    i0.…µ…µelementEnd();\n  }\n}\n//import { PaymentModalComponent } from '../payment-modal/payment-modal.component';\nclass CartComponent {\n  constructor(cartService) {\n    this.cartService = cartService;\n    this.cartItems = [];\n    this.isModalOpen = false;\n    this.isPaymentModalOpen = false; // Controla a visibilidade do modal de pagamento\n    this.cartService.cartItems$.subscribe(items => {\n      this.cartItems = items;\n    });\n  }\n  toggleModal() {\n    this.isModalOpen = !this.isModalOpen;\n  }\n  // Abre o modal de pagamento\n  openPaymentModal() {\n    this.isPaymentModalOpen = !this.isPaymentModalOpen;\n  }\n  // Fecha o modal de pagamento\n  closePaymentModal() {\n    this.isPaymentModalOpen = false;\n  }\n  // Lida com a confirma√ß√£o do pagamento\n  handlePayment(paymentMethod) {\n    console.log('Pagamento confirmado com:', paymentMethod);\n    // Aqui voc√™ pode adicionar a l√≥gica para processar o pagamento\n    this.closePaymentModal(); // Fecha o modal ap√≥s o pagamento\n  }\n  static #_ = this.…µfac = function CartComponent_Factory(t) {\n    return new (t || CartComponent)(i0.…µ…µdirectiveInject(i1.CartService));\n  };\n  static #_2 = this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: CartComponent,\n    selectors: [[\"app-cart\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"fixed\", \"bottom-0\", \"left-0\", \"right-0\", \"p-4\", \"shadow-lg\", \"flex\", \"justify-center\", \"gap-20\"], [1, \"p-2\", \"bg-lime-300\", \"text-black\", \"rounded-full\", 3, \"click\"], [1, \"p-2\", \"bg-orange-300\", \"text-black\", \"rounded-full\", 3, \"click\"], [3, \"close\", 4, \"ngIf\"], [3, \"close\"]],\n    template: function CartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.…µ…µlistener(\"click\", function CartComponent_Template_button_click_1_listener() {\n          return ctx.toggleModal();\n        });\n        i0.…µ…µtext(2);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(3, \"button\", 2);\n        i0.…µ…µlistener(\"click\", function CartComponent_Template_button_click_3_listener() {\n          return ctx.openPaymentModal();\n        });\n        i0.…µ…µtext(4, \" Pagamento \");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µtemplate(5, CartComponent_app_cart_modal_5_Template, 1, 0, \"app-cart-modal\", 3);\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(2);\n        i0.…µ…µtextInterpolate1(\" \\uD83D\\uDED2 Carrinho (\", ctx.cartItems.length, \") \");\n        i0.…µ…µadvance(3);\n        i0.…µ…µproperty(\"ngIf\", ctx.isModalOpen);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJ0LmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FydC9jYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdLQUFnSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CartComponent };","map":{"version":3,"mappings":";;;;;IAWGA,EAAA,CAAAC,cAAA,wBAAkE;IAA9BD,EAAA,CAAAE,UAAA,mBAAAC,wEAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,WAAA,GAAuB,KAAK;IAAA,EAAC;IAACT,EAAA,CAAAU,YAAA,EAAiB;;;ACNtF;AAEA,MAMaC,aAAa;EAMxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAJ/B,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAL,WAAW,GAAG,KAAK;IACnB,KAAAM,kBAAkB,GAAY,KAAK,CAAC,CAAC;IAGnC,IAAI,CAACF,WAAW,CAACG,UAAU,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC9C,IAAI,CAACJ,SAAS,GAAGI,KAAK;IACxB,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACV,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAEA;EACAW,gBAAgBA,CAAA;IACd,IAAI,CAACL,kBAAkB,GAAG,CAAC,IAAI,CAACA,kBAAkB;EACpD;EAEA;EACAM,iBAAiBA,CAAA;IACf,IAAI,CAACN,kBAAkB,GAAG,KAAK;EACjC;EAEA;EACAO,aAAaA,CAACC,aAAqB;IACjCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,aAAa,CAAC;IACvD;IACA,IAAI,CAACF,iBAAiB,EAAE,CAAC,CAAC;EAC5B;EAAC,QAAAK,CAAA;qBA/BUf,aAAa,EAAAX,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA;UAAbnB,aAAa;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QDb1BrC,EAAA,CAAAC,cAAA,aAAoF;QACxED,EAAA,CAAAE,UAAA,mBAAAqC,+CAAA;UAAA,OAASD,GAAA,CAAAnB,WAAA,EAAa;QAAA,EAAC;QAC7BnB,EAAA,CAAAwC,MAAA,GACF;QAAAxC,EAAA,CAAAU,YAAA,EAAS;QAETV,EAAA,CAAAC,cAAA,gBAAuF;QAA/ED,EAAA,CAAAE,UAAA,mBAAAuC,+CAAA;UAAA,OAASH,GAAA,CAAAlB,gBAAA,EAAkB;QAAA,EAAC;QAClCpB,EAAA,CAAAwC,MAAA,kBACF;QAAAxC,EAAA,CAAAU,YAAA,EAAS;QAIVV,EAAA,CAAA0C,UAAA,IAAAC,uCAAA,4BAAmF;;;QAThF3C,EAAA,CAAA4C,SAAA,GACF;QADE5C,EAAA,CAAA6C,kBAAA,6BAAAP,GAAA,CAAAxB,SAAA,CAAAgC,MAAA,OACF;QAQgB9C,EAAA,CAAA4C,SAAA,GAAiB;QAAjB5C,EAAA,CAAA+C,UAAA,SAAAT,GAAA,CAAA7B,WAAA,CAAiB;;;;;;SCExBE,aAAa","names":["i0","…µ…µelementStart","…µ…µlistener","CartComponent_app_cart_modal_5_Template_app_cart_modal_close_0_listener","…µ…µrestoreView","_r2","ctx_r1","…µ…µnextContext","…µ…µresetView","isModalOpen","…µ…µelementEnd","CartComponent","constructor","cartService","cartItems","isPaymentModalOpen","cartItems$","subscribe","items","toggleModal","openPaymentModal","closePaymentModal","handlePayment","paymentMethod","console","log","_","…µ…µdirectiveInject","i1","CartService","_2","selectors","decls","vars","consts","template","CartComponent_Template","rf","ctx","CartComponent_Template_button_click_1_listener","…µ…µtext","CartComponent_Template_button_click_3_listener","…µ…µtemplate","CartComponent_app_cart_modal_5_Template","…µ…µadvance","…µ…µtextInterpolate1","length","…µ…µproperty"],"sourceRoot":"","sources":["/home/lucas/Documentos/Web 3/fev16/src/app/cart/cart.component.html","/home/lucas/Documentos/Web 3/fev16/src/app/cart/cart.component.ts"],"sourcesContent":["<div class=\"fixed bottom-0 left-0 right-0 p-4 shadow-lg flex justify-center gap-20\">\n    <button (click)=\"toggleModal()\" class=\"p-2 bg-lime-300 text-black rounded-full\">\n      üõí Carrinho ({{ cartItems.length }})\n    </button>\n\n    <button (click)=\"openPaymentModal()\" class=\"p-2 bg-orange-300 text-black rounded-full\">\n      Pagamento\n    </button>\n  </div>\n\n   <!-- Modal do Carrinho // ID11 - USo do nfIf para manipula√ß√£o din√¢mica de dados  -->\n   <app-cart-modal *ngIf=\"isModalOpen\" (close)=\"isModalOpen = false\"></app-cart-modal>\n\n\n <!-- Modal de Pagamento \n <app-payment-modal\n    *ngIf=\"isPaymentModalOpen\"\n    (close)=\"closePaymentModal()\"\n    (paymentConfirmed)=\"handlePayment($event)\"\n  ></app-payment-modal>-->","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartService } from '../services/cart.service';\nimport { CartModalComponent } from '../cart-modal/cart-modal.component';\nimport { FormsModule } from '@angular/forms'; // Importe o FormsModule\n//import { PaymentModalComponent } from '../payment-modal/payment-modal.component';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\n\nexport class CartComponent {\n\n  cartItems: any[] = [];\n  isModalOpen = false;\n  isPaymentModalOpen: boolean = false; // Controla a visibilidade do modal de pagamento\n\n  constructor(private cartService: CartService) {\n    this.cartService.cartItems$.subscribe((items) => {\n      this.cartItems = items;\n    });\n  }\n\n  toggleModal() {\n    this.isModalOpen = !this.isModalOpen;  \n  }\n\n  // Abre o modal de pagamento\n  openPaymentModal() {\n    this.isPaymentModalOpen = !this.isPaymentModalOpen;\n  }\n\n  // Fecha o modal de pagamento\n  closePaymentModal() {\n    this.isPaymentModalOpen = false;\n  }\n\n  // Lida com a confirma√ß√£o do pagamento\n  handlePayment(paymentMethod: string) {\n    console.log('Pagamento confirmado com:', paymentMethod);\n    // Aqui voc√™ pode adicionar a l√≥gica para processar o pagamento\n    this.closePaymentModal(); // Fecha o modal ap√≥s o pagamento\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}