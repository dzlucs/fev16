{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nlet CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.cartItemsSubject = new BehaviorSubject([]);\n      this.cartItems$ = this.cartItemsSubject.asObservable();\n    }\n    addCartItem(item) {\n      const currentItems = this.cartItemsSubject.value;\n      this.cartItemsSubject.next([...currentItems, item]);\n    }\n    removeCartItem(item) {\n      const currentItems = this.cartItemsSubject.value.filter(i => i !== item);\n      this.cartItemsSubject.next(currentItems);\n    }\n    static #_ = this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root' // Isso garante que o serviço está disponível em toda a aplicação\n    });\n  }\n  return CartService;\n})();\nexport { CartService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}